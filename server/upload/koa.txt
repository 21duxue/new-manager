Koa2
官网：https://koa.bootcss.com/

Koa是基于Node.js平台的下一台Web开发框架，Koa是一个全新的Web框架，由Express原班人马打造，致力于成为Web应用和API开发领域中更小且更加富有表现力、更健壮的基石。通过async函数Koa帮你丢弃回调函数，并有力地增强错误处理。Koa并没有绑定任何中间件，而是提供了一套优雅的方法帮助快速编写服务器端应用程序。

Koa2相比较Koa1最大区别在于中间件的写法，Koa1使用Generator，Koa2使用async/await语法，因此Node.js必须大于v7.6.0+。
async/await

async用于声明一个函数是异步的，await只能出现在async修改的函数中。async函数会返回一个promise对象，如果在async函数返回一个直接量它最终将通过Promise.resolve封装成promise对象，进而可以直接通过promise对象的then方法来获取这个直接量。

await会暂停当前async的执行，await会阻塞代码的执行直到await后的表达式处理完毕，代码才继续往下执行。await后的表达式可以是一个promise对象也可以任何需要等待的值。如果await等到的是一个promise对象，await就会阻塞后续代码直到promise对象resolve后得到resolve的值作为await表达式的运算结果。

async/await只是一种语法糖，其代码执行与回调函数嵌套是本质上是没有区别的，只是写法上让人以同步的思维去思考，避开回调地狱。简而言之，async/await是以同步的思维去编写异步的代码，所以async/await并不会影响Node.js的并发数。

中间件

中间件类似于过滤器，用于在客户端和应用程序之间处理请求和响应的方法。中间件的执行类似剥洋葱，但并非一层层的执行，而是以next为分界，先执行本层next之前的部分，当下一层中间件执行完毕后再执行本层next之后的部分。

